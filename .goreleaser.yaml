# This is an example .goreleaser.yml file with some sensible defaults.
# Make sure to check the documentation at https://goreleaser.com
env:
  - GO111MODULE=on

gomod:
  proxy: true

before:
  hooks:
    - make generate
    # - make default
builds:
  - id: universal
    ldflags:
      - -w -s -X github.com/easysoft/qcadmin/common.Version={{.Summary}}
      - -X github.com/easysoft/qcadmin/common.BuildDate={{.Date}}
      - -X github.com/easysoft/qcadmin/common.GitCommitHash={{.ShortCommit}}
      - -X k8s.io/client-go/pkg/version.gitVersion={{.Summary}}
      - -X k8s.io/client-go/pkg/version.gitCommit={{.FullCommit}}
      - -X k8s.io/client-go/pkg/version.gitTreeState=dirty
      - -X k8s.io/client-go/pkg/version.buildDate={{.Date}}
      - -X k8s.io/client-go/pkg/version.gitMajor=1
      - -X k8s.io/client-go/pkg/version.gitMinor=23
      - -X k8s.io/component-base/version.gitVersion={{.Summary}}
      - -X k8s.io/component-base/version.gitCommit={{.FullCommit}}
      - -X k8s.io/component-base/version.gitTreeState=dirty
      - -X k8s.io/component-base/version.gitMajor=1
      - -X k8s.io/component-base/version.gitMinor=23
      - -X k8s.io/component-base/version.buildDate={{.Date}}
    env:
      - CGO_ENABLED=0
    goos:
      - linux
    goarch:
      - amd64
      - arm64
      # - mips
      # - mipsle
      # - s390x
      # - riscv64
    # gomips:
    #   - softfloat
    hooks:
      post:
        - upx -9 -f -q "{{ .Path }}"
    main: main.go
    binary: qcadmin
  - id: without-upx
    ldflags:
      - -w -s -X github.com/easysoft/qcadmin/common.Version={{.Summary}}
      - -X github.com/easysoft/qcadmin/common.BuildDate={{.Date}}
      - -X github.com/easysoft/qcadmin/common.GitCommitHash={{.ShortCommit}}
      - -X k8s.io/client-go/pkg/version.gitVersion={{.Summary}}
      - -X k8s.io/client-go/pkg/version.gitCommit={{.FullCommit}}
      - -X k8s.io/client-go/pkg/version.gitTreeState=dirty
      - -X k8s.io/client-go/pkg/version.buildDate={{.Date}}
      - -X k8s.io/client-go/pkg/version.gitMajor=1
      - -X k8s.io/client-go/pkg/version.gitMinor=23
      - -X k8s.io/component-base/version.gitVersion={{.Summary}}
      - -X k8s.io/component-base/version.gitCommit={{.FullCommit}}
      - -X k8s.io/component-base/version.gitTreeState=dirty
      - -X k8s.io/component-base/version.gitMajor=1
      - -X k8s.io/component-base/version.gitMinor=23
      - -X k8s.io/component-base/version.buildDate={{.Date}}
    env:
      - CGO_ENABLED=0
    goos:
      - darwin
    goarch:
      - amd64
      - arm64
      # - mips
      # - mipsle
      # - s390x
      # - riscv64
    # gomips:
    #   - softfloat
    ignore:
      - goos: darwin
        goarch: mips
      - goos: darwin
        goarch: mipsle
      - goos: darwin
        goarch: s390x
      - goos: darwin
        goarch: riscv64
    main: main.go
    binary: qcadmin
# universal_binaries:
#   - name_template: "qcadmin"
#     replace: false
archives:
  - format: binary
    name_template: "qcadmin_{{ .Os }}_{{ .Arch }}{{ if .Arm }}v{{ .Arm }}{{ end }}"
checksum:
  name_template: 'checksums.txt'
snapshot:
  name_template: "qcadmin-{{.Tag}}-{{.ShortCommit}}"
changelog:
  sort: asc
  filters:
    exclude:
      - '^docs:'
      - '^test:'
      - '^feat(update):'
      - '^feat(ci):'
      - Merge pull request
      - Merge branch
      - go mod tidy

release:
  # Repo in which the release will be created.
  # Default is extracted from the origin remote URL or empty if its private hosted.
  # github:
  #   owner: user
  #   name: repo

  # IDs of the archives to use.
  # Defaults to all.
  # ids:
  #   - foo
  #   - bar

  # If set to true, will not auto-publish the release.
  # Default is false.
  # draft: true

  # If set, will create a release discussion in the category specified.
  #
  # Warning: do not use categories in the 'Announcement' format.
  #  Check https://github.com/goreleaser/goreleaser/issues/2304 for more info.
  #
  # Default is empty.
  discussion_category_name: General

  # If set to auto, will mark the release as not ready for production
  # in case there is an indicator for this in the tag e.g. v1.0.0-rc1
  # If set to true, will mark the release as not ready for production.
  # Default is false.
  prerelease: auto

  # What to do with the release notes in case there the release already exists.
  #
  # Valid options are:
  # - `keep-existing`: keep the existing notes
  # - `append`: append the current release notes to the existing notes
  # - `prepend`: prepend the current release notes to the existing notes
  # - `replace`: replace existing notes
  #
  # Default is `keep-existing`.
  mode: replace

  # Header template for the release body.
  # Defaults to empty.
  # header: |
  #   ## Some title ({{ .Date }})

  #   Welcome to this new release!

  # Footer template for the release body.
  # Defaults to empty.
  footer: |
    **Full Changelog**: https://github.com/easysoft/qucheng_cli/compare/{{ .PreviousTag }}...{{ .Tag }}

  #   Those were the changes on {{ .Tag }}!

  # You can change the name of the release.
  # Default is `{{.Tag}}` on OSS and `{{.PrefixedTag}}` on Pro.
  # name_template: "{{.ProjectName}}-v{{.Version}} {{.Env.USER}}"

  # You can disable this pipe in order to not create the release on any SCM.
  # Keep in mind that this might also break things that depens on the release URL, for instance, homebrew taps.
  #
  # Defaults to false.
  # disable: true

  # You can add extra pre-existing files to the release.
  # The filename on the release will be the last part of the path (base).
  # If another file with the same name exists, the last one found will be used.
  # These globs can also include templates.
  #
  # Defaults to empty.
  # extra_files:
  #   - glob: ./path/to/file.txt
  #   - glob: ./glob/**/to/**/file/**/*
  #   - glob: ./glob/foo/to/bar/file/foobar/override_from_previous
  #   - glob: ./single_file.txt
  #     name_template: file.txt # note that this only works if glob matches 1 file only


# announce:
#   twitter:
#     enabled: true
#     message_template: 'QuCheng Cli {{ .Tag }} is out! Check it out: https://github.com/easysoft/qucheng_cli/releases/tag/{{ .Tag }}'
